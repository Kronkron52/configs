#------------------------------------------------------------------
#
#                              SQL tutorial
#
#
#---------------------------------------------------------------------
primary key, Pk # столбы с ID в БД уникальный индификатор #обязательный параметр 
foreign key, FK # (внещний ключ) столбец  в бд в котором лежат PK первичные ключи другой таблицы 

Группы команд SQL
DML # data manipulation language 
SELECT # выборка (получение) данных из БД
INSERT # вставка данных в таблицу 
UPDATE # Редактирование (изменение) данных в БД
DELETE # удаление (строчек) данных


DDL # команды для работы с таблицами БД, чтобы создавать таблицы, редактировать и тд 
CREATE # создание объекта база данных ( таблица или сама база данных )
ALTER # изменить объект базы данных 
DROP # удаление объекта 

TCL # Transaction comtrol language команда управления транзациями



DCL # комады управления доступами к объектам 
#---------------------------------------------------------
SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы>
SELECT ID, Name, BrithDate FROM Persons
SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы> ORDER BY <столбец1>,...
ORDER BY # сортировка

SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы> WHERE <условие или условия отбора данных из таблицы >
ORDER BY <столбец1>,...

WHERE # возможность фитровать данные 

SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы>
JOIN (соединение дополнительных таблиц) 
WHERE <условие или условия отбора данных из таблицы >
ORDER BY <столбец1>,...

JOIN # добавить ещё данные из других таблиц (соединяет таблицы)

SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы>
JOIN (соединение дополнительных таблиц) 
WHERE <условие или условия отбора данных из таблицы>
GROUP BY # <Признаки группировки >
ORDER BY <столбец1>,...

GROUP BY # групировать данные 

SELECT <столбец1>,<столбец2>.......<столбецN> FROM <имя таблицы>
JOIN (соединение дополнительных таблиц) 
WHERE <условие или условия отбора данных из таблицы>
GROUP BY # <Признаки группировки >
HAVING # <Условие отбора на основе данных группировки>
ORDER BY <столбец1>,...

HAVING # фильрация по сгруппированной информации 
HAVING не может быть без GROUP BY 
#-------------------------------------------------------------------------------

SELECT ID, Name, BrithDate FROM Persons WHERE FILIALID = 1
SELECT ID, Name, BrithDate FROM Persons WHERE FILIALID <> 1 # не равно 1 
<> # не ровно
!= # не ровно 
> # больше 
< # меньшу
>= # Больше или равно 
<= # Меньше или равно 
SELECT ID, Name, BrithDate FROM Persons WHERE FILIALID <> 1 ORDER BY BirthDay # самые старшие сотрудники будут в конце 
Прямой порядок 
SELECT ID, Name, BrithDate FROM Persons WHERE FILIALID <> 1 ORDER BY BirthDay desc # показать самых молодых сотрудников 
Обратный порядок

SELECT * FROM Persons WHERE FILIALID = 1 OR FILIALID = 2 ORDER BY BirthDay # филиал 1 или 2 
SELECT * FROM Persons WHERE FILIALID = 1 OR FILIALID END Birthday > 1970 ORDER BY BirthDay
#-----------------------------------------------------------------------------------------------------------------
Операторы в SQL 
SELECT * FROM Pesons WHERE FiliaID IN (1,2) # вхождение в множество 1 или 2 
SELECT * FROM Pesons WHERE FiliaID IN (1,2,23,54,123,34)
SELECT * FROM Pesons WHERE FiliaID NOT IN (1,2,23,54,123,34) # значение не входит в множество 
SELECT * FROM Pesons WHERE Name = 'text' # текст пишется в одинарных ковычках ВСЕГДА 
SELECT * FROM Pesons WHERE BirthDay >= '01.02.1980' # сравнивать с датой ( не явное преобразование )
SELECT * FROM Pesons WHERE BirthDay >= to_date ('01.02.1980', 'dd.mm.yyyy') # использовать функция даты, и использовать формат даты
#-----------------------
SELECT * 
FROM Pesons 
WHERE BirthDay >= to_date ('01.02.1980', 'dd.mm.yyyy')
AND BirthDay <= ta_date ('01.02.1985', 'dd.mm.yyyy')
#-----------------------
SELECT * FROM Pesons WHERE BirthDay BETWEEN to_date ('01.02.1980', 'dd.mm.yyyy') AND BirthDay ta_date ('01.02.1985', 'dd.mm.yyyy')
BETWEEN # функция между 
#----------------------------
SELECT * FROM Pesons WHERE NAME LIKE '%text#' # найти текст КАК text 
LIKE # как, как вот это значение text 
% # любой 









































































































